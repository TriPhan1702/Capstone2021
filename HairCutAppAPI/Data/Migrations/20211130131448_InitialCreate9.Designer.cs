// <auto-generated />
using System;
using HairCutAppAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HairCutAppAPI.Data.Migrations
{
    [DbContext(typeof(HDBContext))]
    [Migration("20211130131448_InitialCreate9")]
    partial class InitialCreate9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HairCutAppAPI.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "admin123@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Phan Anh Tuấn",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "administrator",
                            Status = "active"
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "manager123@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Đặng Trọng Hà",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "manager",
                            Status = "active"
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "stylist123@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Phạm Quang Tú",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "active"
                        },
                        new
                        {
                            Id = 4,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "beautician123@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Phạm Thụy Trinh",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "active"
                        },
                        new
                        {
                            Id = 5,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "stylist1234@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Phạm Nhật Dũng",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "active"
                        },
                        new
                        {
                            Id = 6,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "beautician1234@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Đặng Hà Giang",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "active"
                        },
                        new
                        {
                            Id = 7,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "customer1@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Hồ Kim Thông",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "active"
                        },
                        new
                        {
                            Id = 8,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "customer2@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Phạm Nguyên Phong",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "active"
                        },
                        new
                        {
                            Id = 9,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "customer3@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Lý Thanh Thế",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "active"
                        },
                        new
                        {
                            Id = 10,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "slyteplayer@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Le Thanh nghia",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0348073007",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 11,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "thanhnghiale1312@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Le thanh nghia",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0986721721",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 12,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "anhdaovo1967@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Vo thi anh dao",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0914001728",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 13,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "lethanhan1963@gmail.com",
                            EmailConfirmed = false,
                            FullName = "le thanh an",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0906541022",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 14,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "lethanhan0101@gmail.com",
                            EmailConfirmed = false,
                            FullName = "le thanh an",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0905413695",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 15,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "phangiabao97@gmail.com",
                            EmailConfirmed = false,
                            FullName = "phan gia bao",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0327882535",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 16,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "uyennuy1997@gmail.com",
                            EmailConfirmed = false,
                            FullName = "phan vu nhu uyen",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0986099088",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 17,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "alta.sharp@gmail.com",
                            EmailConfirmed = false,
                            FullName = "le van tan",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 18,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "minhthuan.tang@gmail.com",
                            EmailConfirmed = false,
                            FullName = "tang minh thuan",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 19,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "customer3@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Customer 3",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 20,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "duythanh_pham19@hotmail.com",
                            EmailConfirmed = false,
                            FullName = "pham duy thanh",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 21,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "trihung_dang15@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "dang tri hung",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 22,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "thaomai.mai65@gmail.com",
                            EmailConfirmed = false,
                            FullName = "mai thi ngoc mai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 23,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "haonhien.dinh0@gmail.com",
                            EmailConfirmed = false,
                            FullName = "dinh hao nhien",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 24,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "khanhhoan_do@gmail.com",
                            EmailConfirmed = false,
                            FullName = "do hoang khanh",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 25,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "thusuong_phan54@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "phan thi thu suong",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 26,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "quynhchi.ngo83@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Ngo quynh chi",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 27,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "bangbang73@gmail.com",
                            EmailConfirmed = false,
                            FullName = "pham bang bang",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 28,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "vietnhan6@gmail.com",
                            EmailConfirmed = false,
                            FullName = "le hoang viet nhan",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 29,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "huyenanh.hoang48@gmail.com",
                            EmailConfirmed = false,
                            FullName = "nguyen hoang huyen anh",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 30,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "baohan69@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "truong bao han",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 31,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "tanlong.nguyen33@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "long van tan",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 32,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "ngantruc76@hotmail.com",
                            EmailConfirmed = false,
                            FullName = "ngan thanh truc",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 33,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "linhgiang.ngo63@hotmail.com",
                            EmailConfirmed = false,
                            FullName = "ngo linh giang",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 34,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "thiyen_ho98@gmail.com",
                            EmailConfirmed = false,
                            FullName = "ho thi yen",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 35,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "duyhung.mai@gmail.com",
                            EmailConfirmed = false,
                            FullName = "mai duy hung",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 36,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "viethong_phung@hotmail.com",
                            EmailConfirmed = false,
                            FullName = "phung viet thong",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 37,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "tuananh76@gmail.com",
                            EmailConfirmed = false,
                            FullName = "nguyen anh tuan",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 38,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "phiphuong1@gmail.com",
                            EmailConfirmed = false,
                            FullName = "nguyen duy phuong",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 39,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "tieubao33@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "ngo tieu bao",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 40,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "thusuong_phan99@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "nguyen thi truc suong",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 41,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "huutuong30@gmail.com",
                            EmailConfirmed = false,
                            FullName = "giang huu tuong",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 42,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "gianguyen33@gmail.com",
                            EmailConfirmed = false,
                            FullName = "nguyen gia anh",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 43,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "nghiahoa.phung75@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "phung ngoc hoa",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "customer",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 44,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician13@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Beautician mot ba",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 45,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Manager2@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Manager hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "manager",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 46,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist21@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist hai mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 47,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist22@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist hai hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 48,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician21@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautican hai mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 49,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician22@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician hai hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 50,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Manager3@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Manager ba",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "manager",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 51,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist31@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist ba mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 52,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist32@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist ba hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 53,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician31@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician ba mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 54,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician32@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician ba hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 55,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Manager4@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Manager bon",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "manager",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 56,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist41@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist bon mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 57,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist42@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist bon hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 58,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician41@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician bon mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 59,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician42@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician bon hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 60,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Manager5@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Manager nam",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "manager",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 61,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist51@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist nam mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 62,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist52@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist nam hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 63,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician51@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician nam mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 64,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician52@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician nam hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 65,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Manager6@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Manager sau",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "manager",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 66,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist61@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist sau mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 67,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Stylist62@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Stylist sau hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "stylist",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 68,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician61@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautician sau mot",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 69,
                            AvatarUrl = "https://thispersondoesnotexist.com/image",
                            Email = "Beautician62@yahoo.com",
                            EmailConfirmed = false,
                            FullName = "Beautican sau hai",
                            PasswordHash = new byte[] { 249, 245, 209, 29, 68, 94, 190, 54, 131, 75, 44, 32, 45, 208, 86, 222, 150, 99, 191, 191, 149, 96, 3, 4, 66, 57, 145, 252, 158, 89, 93, 63, 51, 161, 159, 175, 3, 81, 139, 77, 251, 49, 149, 124, 163, 87, 131, 247, 182, 75, 105, 65, 71, 149, 231, 26, 239, 8, 197, 173, 65, 107, 132, 139 },
                            PasswordSalt = new byte[] { 63, 220, 133, 163, 231, 137, 82, 177, 60, 75, 75, 8, 190, 249, 179, 130, 62, 249, 92, 162, 41, 115, 83, 232, 176, 39, 137, 221, 237, 129, 72, 44, 38, 138, 184, 142, 122, 223, 55, 225, 242, 203, 104, 228, 125, 198, 6, 118, 147, 184, 139, 220, 3, 38, 70, 60, 0, 94, 48, 60, 49, 61, 20, 172, 146, 75, 53, 169, 31, 201, 125, 136, 107, 225, 237, 213, 96, 199, 239, 42, 49, 83, 52, 174, 211, 215, 25, 185, 26, 14, 188, 105, 79, 160, 103, 191, 26, 77, 127, 216, 247, 199, 53, 168, 244, 58, 105, 89, 167, 24, 170, 132, 110, 189, 89, 205, 84, 139, 62, 85, 225, 16, 120, 249, 105, 26, 21, 182 },
                            PhoneConfirmed = false,
                            PhoneNumber = "0869190061",
                            Role = "beautician",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChosenStaffId")
                        .HasColumnType("int");

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<decimal>("ComboPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PromotionalCodeId")
                        .HasColumnType("int");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ChosenStaffId");

                    b.HasIndex("ComboId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromotionalCodeId");

                    b.HasIndex("SalonId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.AppointmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDoneByStylist")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("AppointmentDetails");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.AppointmentRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RatingComment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("AppointmentRatings");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorUserId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUserId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Cắt Tóc",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Cắt Tóc",
                            Price = 45000m,
                            Status = "active"
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Cắt Tóc Gội Đầu",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Cắt Tóc Gội Đầu",
                            Price = 60000m,
                            Status = "active"
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Cắt Tóc Gội Đầu Rửa Mặt",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Cắt Tóc Gội Đầu Chăm Sóc Da Mặt",
                            Price = 80000m,
                            Status = "active"
                        },
                        new
                        {
                            Id = 4,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Cắt Tóc, Ráy Táy, Gội Đầu, Rửa Mặt, Dắp mặt",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Chăm sóc đầy đử",
                            Price = 100000m,
                            Status = "active"
                        },
                        new
                        {
                            Id = 5,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Cắt Tóc, Ráy Táy",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Cắt tóc ráy tai",
                            Price = 60000m,
                            Status = "active"
                        },
                        new
                        {
                            Id = 6,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Nhuộm tóc",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Nhuộm tóc",
                            Price = 140000m,
                            Status = "active"
                        },
                        new
                        {
                            Id = 7,
                            AvatarUrl = "https://placeimg.com/500/500/tech",
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Uốn tóc",
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Uốn tóc",
                            Price = 40000m,
                            Status = "active"
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.ComboDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDoneByStylist")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ComboDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComboId = 1,
                            IsDoneByStylist = true,
                            ServiceId = 1,
                            ServiceOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ComboId = 2,
                            IsDoneByStylist = true,
                            ServiceId = 1,
                            ServiceOrder = 1
                        },
                        new
                        {
                            Id = 3,
                            ComboId = 2,
                            IsDoneByStylist = false,
                            ServiceId = 2,
                            ServiceOrder = 2
                        },
                        new
                        {
                            Id = 4,
                            ComboId = 3,
                            IsDoneByStylist = true,
                            ServiceId = 1,
                            ServiceOrder = 1
                        },
                        new
                        {
                            Id = 5,
                            ComboId = 3,
                            IsDoneByStylist = false,
                            ServiceId = 2,
                            ServiceOrder = 2
                        },
                        new
                        {
                            Id = 6,
                            ComboId = 3,
                            IsDoneByStylist = false,
                            ServiceId = 4,
                            ServiceOrder = 3
                        },
                        new
                        {
                            Id = 7,
                            ComboId = 4,
                            IsDoneByStylist = true,
                            ServiceId = 1,
                            ServiceOrder = 1
                        },
                        new
                        {
                            Id = 8,
                            ComboId = 4,
                            IsDoneByStylist = false,
                            ServiceId = 2,
                            ServiceOrder = 2
                        },
                        new
                        {
                            Id = 9,
                            ComboId = 4,
                            IsDoneByStylist = false,
                            ServiceId = 3,
                            ServiceOrder = 3
                        },
                        new
                        {
                            Id = 10,
                            ComboId = 4,
                            IsDoneByStylist = false,
                            ServiceId = 4,
                            ServiceOrder = 4
                        },
                        new
                        {
                            Id = 11,
                            ComboId = 4,
                            IsDoneByStylist = false,
                            ServiceId = 5,
                            ServiceOrder = 5
                        },
                        new
                        {
                            Id = 12,
                            ComboId = 5,
                            IsDoneByStylist = true,
                            ServiceId = 1,
                            ServiceOrder = 1
                        },
                        new
                        {
                            Id = 13,
                            ComboId = 5,
                            IsDoneByStylist = false,
                            ServiceId = 3,
                            ServiceOrder = 2
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            EmailConfirmed = false,
                            FullName = "Hồ Kim Thông",
                            PhoneConfirmed = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            EmailConfirmed = false,
                            FullName = "Phạm Nguyên Phong",
                            PhoneConfirmed = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            EmailConfirmed = false,
                            FullName = "Lý Thanh Thế",
                            PhoneConfirmed = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            EmailConfirmed = false,
                            FullName = "Le thanh nghia",
                            PhoneConfirmed = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            EmailConfirmed = false,
                            FullName = "Le thanh nghia",
                            PhoneConfirmed = false,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            EmailConfirmed = false,
                            FullName = "Vo thi anh dao",
                            PhoneConfirmed = false,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            EmailConfirmed = false,
                            FullName = "le thanh an",
                            PhoneConfirmed = false,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            EmailConfirmed = false,
                            FullName = "le thanh an",
                            PhoneConfirmed = false,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            EmailConfirmed = false,
                            FullName = "phan gia bao",
                            PhoneConfirmed = false,
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            EmailConfirmed = false,
                            FullName = "phan vu nhu uyen",
                            PhoneConfirmed = false,
                            UserId = 16
                        },
                        new
                        {
                            Id = 17,
                            EmailConfirmed = false,
                            FullName = "le van tan",
                            PhoneConfirmed = false,
                            UserId = 17
                        },
                        new
                        {
                            Id = 18,
                            EmailConfirmed = false,
                            FullName = "tang minh thuan",
                            PhoneConfirmed = false,
                            UserId = 18
                        },
                        new
                        {
                            Id = 19,
                            EmailConfirmed = false,
                            FullName = "Customer 3",
                            PhoneConfirmed = false,
                            UserId = 19
                        },
                        new
                        {
                            Id = 20,
                            EmailConfirmed = false,
                            FullName = "pham duy thanh",
                            PhoneConfirmed = false,
                            UserId = 20
                        },
                        new
                        {
                            Id = 21,
                            EmailConfirmed = false,
                            FullName = "dang tri hung",
                            PhoneConfirmed = false,
                            UserId = 21
                        },
                        new
                        {
                            Id = 22,
                            EmailConfirmed = false,
                            FullName = "mai thi ngoc mai",
                            PhoneConfirmed = false,
                            UserId = 22
                        },
                        new
                        {
                            Id = 23,
                            EmailConfirmed = false,
                            FullName = "dinh hao nhien",
                            PhoneConfirmed = false,
                            UserId = 23
                        },
                        new
                        {
                            Id = 24,
                            EmailConfirmed = false,
                            FullName = "do hoang khanh",
                            PhoneConfirmed = false,
                            UserId = 24
                        },
                        new
                        {
                            Id = 25,
                            EmailConfirmed = false,
                            FullName = "phan thi thu suong",
                            PhoneConfirmed = false,
                            UserId = 25
                        },
                        new
                        {
                            Id = 26,
                            EmailConfirmed = false,
                            FullName = "Ngo quynh chi",
                            PhoneConfirmed = false,
                            UserId = 26
                        },
                        new
                        {
                            Id = 27,
                            EmailConfirmed = false,
                            FullName = "pham bang bang",
                            PhoneConfirmed = false,
                            UserId = 27
                        },
                        new
                        {
                            Id = 28,
                            EmailConfirmed = false,
                            FullName = "le hoang viet nhan",
                            PhoneConfirmed = false,
                            UserId = 28
                        },
                        new
                        {
                            Id = 29,
                            EmailConfirmed = false,
                            FullName = "nguyen hoang huyen anh",
                            PhoneConfirmed = false,
                            UserId = 29
                        },
                        new
                        {
                            Id = 30,
                            EmailConfirmed = false,
                            FullName = "truong bao han",
                            PhoneConfirmed = false,
                            UserId = 30
                        },
                        new
                        {
                            Id = 31,
                            EmailConfirmed = false,
                            FullName = "long van tan",
                            PhoneConfirmed = false,
                            UserId = 31
                        },
                        new
                        {
                            Id = 32,
                            EmailConfirmed = false,
                            FullName = "ngan thanh truc",
                            PhoneConfirmed = false,
                            UserId = 32
                        },
                        new
                        {
                            Id = 33,
                            EmailConfirmed = false,
                            FullName = "ngo linh giang",
                            PhoneConfirmed = false,
                            UserId = 33
                        },
                        new
                        {
                            Id = 34,
                            EmailConfirmed = false,
                            FullName = "ho thi yen",
                            PhoneConfirmed = false,
                            UserId = 34
                        },
                        new
                        {
                            Id = 35,
                            EmailConfirmed = false,
                            FullName = "mai duy hung",
                            PhoneConfirmed = false,
                            UserId = 35
                        },
                        new
                        {
                            Id = 36,
                            EmailConfirmed = false,
                            FullName = "phung viet thong",
                            PhoneConfirmed = false,
                            UserId = 36
                        },
                        new
                        {
                            Id = 37,
                            EmailConfirmed = false,
                            FullName = "nguyen anh tuan",
                            PhoneConfirmed = false,
                            UserId = 37
                        },
                        new
                        {
                            Id = 38,
                            EmailConfirmed = false,
                            FullName = "nguyen duy phuong",
                            PhoneConfirmed = false,
                            UserId = 38
                        },
                        new
                        {
                            Id = 39,
                            EmailConfirmed = false,
                            FullName = "ngo tieu bao",
                            PhoneConfirmed = false,
                            UserId = 39
                        },
                        new
                        {
                            Id = 40,
                            EmailConfirmed = false,
                            FullName = "nguyen thi truc suong",
                            PhoneConfirmed = false,
                            UserId = 40
                        },
                        new
                        {
                            Id = 41,
                            EmailConfirmed = false,
                            FullName = "giang huu tuong",
                            PhoneConfirmed = false,
                            UserId = 41
                        },
                        new
                        {
                            Id = 42,
                            EmailConfirmed = false,
                            FullName = "nguyen gia anh",
                            PhoneConfirmed = false,
                            UserId = 42
                        },
                        new
                        {
                            Id = 43,
                            EmailConfirmed = false,
                            FullName = "phung ngoc hoa",
                            PhoneConfirmed = false,
                            UserId = 43
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.CustomersCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TimesUsed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersCodes");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Param", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberValue")
                        .HasColumnType("int");

                    b.Property<string>("TextValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Params");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.PromotionalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUniversal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsesPerCustomer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PromotionalCodes");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Rating")
                        .HasColumnType("bit");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SalonId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Salons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon Quận Gò Vấp",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Quận Gò Vấp",
                            Status = "active"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon Quan 1",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Quan 1",
                            Status = "active"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon Quang Trung",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Quang Trung",
                            Status = "active"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon 4",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon 4",
                            Status = "active"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon 5",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Quan 5",
                            Status = "active"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon 6",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Quan 6",
                            Status = "active"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon Thu Duc",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Thu Duc",
                            Status = "active"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Salon Binh Chanh",
                            LastUpdate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Salon Binh Chanh",
                            Status = "active"
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.SalonsCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("SalonId");

                    b.ToTable("SalonsCodes");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Cắt tóc",
                            Duration = 3,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Cắt tóc",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Gội Đầu",
                            Duration = 3,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Gội Đầu",
                            Price = 20000m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Ráy tai",
                            Duration = 1,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Ráy tai",
                            Price = 10000m
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Gội Đầu",
                            Duration = 2,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Chăm Sóc Da Mặt",
                            Price = 20000m
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Đắp Mặt",
                            Duration = 3,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Đắp Mặt",
                            Price = 20000m
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Nhuộm tóc",
                            Duration = 4,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Nhuộm tóc",
                            Price = 150000m
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Uốn tóc",
                            Duration = 3,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Uốn tóc",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Description = "Tạo kiểu",
                            Duration = 3,
                            LastUpdated = new DateTime(2021, 11, 30, 20, 14, 47, 491, DateTimeKind.Local).AddTicks(857),
                            Name = "Tạo kiểu",
                            Price = 20000m
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.SlotOfDay", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("SlotsOfDay");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new TimeSpan(0, 7, 10, 0, 0),
                            StartTime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new TimeSpan(0, 7, 20, 0, 0),
                            StartTime = new TimeSpan(0, 7, 10, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new TimeSpan(0, 7, 30, 0, 0),
                            StartTime = new TimeSpan(0, 7, 20, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new TimeSpan(0, 7, 40, 0, 0),
                            StartTime = new TimeSpan(0, 7, 30, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new TimeSpan(0, 7, 50, 0, 0),
                            StartTime = new TimeSpan(0, 7, 40, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            EndTime = new TimeSpan(0, 8, 0, 0, 0),
                            StartTime = new TimeSpan(0, 7, 50, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            EndTime = new TimeSpan(0, 8, 10, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            EndTime = new TimeSpan(0, 8, 20, 0, 0),
                            StartTime = new TimeSpan(0, 8, 10, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            EndTime = new TimeSpan(0, 8, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 20, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            EndTime = new TimeSpan(0, 8, 40, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            EndTime = new TimeSpan(0, 8, 50, 0, 0),
                            StartTime = new TimeSpan(0, 8, 40, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            EndTime = new TimeSpan(0, 9, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 50, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            EndTime = new TimeSpan(0, 9, 10, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 14,
                            EndTime = new TimeSpan(0, 9, 20, 0, 0),
                            StartTime = new TimeSpan(0, 9, 10, 0, 0)
                        },
                        new
                        {
                            Id = 15,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            StartTime = new TimeSpan(0, 9, 20, 0, 0)
                        },
                        new
                        {
                            Id = 16,
                            EndTime = new TimeSpan(0, 9, 40, 0, 0),
                            StartTime = new TimeSpan(0, 9, 30, 0, 0)
                        },
                        new
                        {
                            Id = 17,
                            EndTime = new TimeSpan(0, 9, 50, 0, 0),
                            StartTime = new TimeSpan(0, 9, 40, 0, 0)
                        },
                        new
                        {
                            Id = 18,
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 50, 0, 0)
                        },
                        new
                        {
                            Id = 19,
                            EndTime = new TimeSpan(0, 10, 10, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 20,
                            EndTime = new TimeSpan(0, 10, 20, 0, 0),
                            StartTime = new TimeSpan(0, 10, 10, 0, 0)
                        },
                        new
                        {
                            Id = 21,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            StartTime = new TimeSpan(0, 10, 20, 0, 0)
                        },
                        new
                        {
                            Id = 22,
                            EndTime = new TimeSpan(0, 10, 40, 0, 0),
                            StartTime = new TimeSpan(0, 10, 30, 0, 0)
                        },
                        new
                        {
                            Id = 23,
                            EndTime = new TimeSpan(0, 10, 50, 0, 0),
                            StartTime = new TimeSpan(0, 10, 40, 0, 0)
                        },
                        new
                        {
                            Id = 24,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 50, 0, 0)
                        },
                        new
                        {
                            Id = 25,
                            EndTime = new TimeSpan(0, 11, 10, 0, 0),
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            Id = 26,
                            EndTime = new TimeSpan(0, 11, 20, 0, 0),
                            StartTime = new TimeSpan(0, 11, 10, 0, 0)
                        },
                        new
                        {
                            Id = 27,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            StartTime = new TimeSpan(0, 11, 20, 0, 0)
                        },
                        new
                        {
                            Id = 28,
                            EndTime = new TimeSpan(0, 11, 40, 0, 0),
                            StartTime = new TimeSpan(0, 11, 30, 0, 0)
                        },
                        new
                        {
                            Id = 29,
                            EndTime = new TimeSpan(0, 11, 50, 0, 0),
                            StartTime = new TimeSpan(0, 11, 40, 0, 0)
                        },
                        new
                        {
                            Id = 30,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            StartTime = new TimeSpan(0, 11, 50, 0, 0)
                        },
                        new
                        {
                            Id = 31,
                            EndTime = new TimeSpan(0, 12, 10, 0, 0),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            Id = 32,
                            EndTime = new TimeSpan(0, 12, 20, 0, 0),
                            StartTime = new TimeSpan(0, 12, 10, 0, 0)
                        },
                        new
                        {
                            Id = 33,
                            EndTime = new TimeSpan(0, 12, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 20, 0, 0)
                        },
                        new
                        {
                            Id = 34,
                            EndTime = new TimeSpan(0, 12, 40, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0)
                        },
                        new
                        {
                            Id = 35,
                            EndTime = new TimeSpan(0, 12, 50, 0, 0),
                            StartTime = new TimeSpan(0, 12, 40, 0, 0)
                        },
                        new
                        {
                            Id = 36,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            StartTime = new TimeSpan(0, 12, 50, 0, 0)
                        },
                        new
                        {
                            Id = 37,
                            EndTime = new TimeSpan(0, 13, 10, 0, 0),
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            Id = 38,
                            EndTime = new TimeSpan(0, 13, 20, 0, 0),
                            StartTime = new TimeSpan(0, 13, 10, 0, 0)
                        },
                        new
                        {
                            Id = 39,
                            EndTime = new TimeSpan(0, 13, 30, 0, 0),
                            StartTime = new TimeSpan(0, 13, 20, 0, 0)
                        },
                        new
                        {
                            Id = 40,
                            EndTime = new TimeSpan(0, 13, 40, 0, 0),
                            StartTime = new TimeSpan(0, 13, 30, 0, 0)
                        },
                        new
                        {
                            Id = 41,
                            EndTime = new TimeSpan(0, 13, 50, 0, 0),
                            StartTime = new TimeSpan(0, 13, 40, 0, 0)
                        },
                        new
                        {
                            Id = 42,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            StartTime = new TimeSpan(0, 13, 50, 0, 0)
                        },
                        new
                        {
                            Id = 43,
                            EndTime = new TimeSpan(0, 14, 10, 0, 0),
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            Id = 44,
                            EndTime = new TimeSpan(0, 14, 20, 0, 0),
                            StartTime = new TimeSpan(0, 14, 10, 0, 0)
                        },
                        new
                        {
                            Id = 45,
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 14, 20, 0, 0)
                        },
                        new
                        {
                            Id = 46,
                            EndTime = new TimeSpan(0, 14, 40, 0, 0),
                            StartTime = new TimeSpan(0, 14, 30, 0, 0)
                        },
                        new
                        {
                            Id = 47,
                            EndTime = new TimeSpan(0, 14, 50, 0, 0),
                            StartTime = new TimeSpan(0, 14, 40, 0, 0)
                        },
                        new
                        {
                            Id = 48,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            StartTime = new TimeSpan(0, 14, 50, 0, 0)
                        },
                        new
                        {
                            Id = 49,
                            EndTime = new TimeSpan(0, 15, 10, 0, 0),
                            StartTime = new TimeSpan(0, 15, 0, 0, 0)
                        },
                        new
                        {
                            Id = 50,
                            EndTime = new TimeSpan(0, 15, 20, 0, 0),
                            StartTime = new TimeSpan(0, 15, 10, 0, 0)
                        },
                        new
                        {
                            Id = 51,
                            EndTime = new TimeSpan(0, 15, 30, 0, 0),
                            StartTime = new TimeSpan(0, 15, 20, 0, 0)
                        },
                        new
                        {
                            Id = 52,
                            EndTime = new TimeSpan(0, 15, 40, 0, 0),
                            StartTime = new TimeSpan(0, 15, 30, 0, 0)
                        },
                        new
                        {
                            Id = 53,
                            EndTime = new TimeSpan(0, 15, 50, 0, 0),
                            StartTime = new TimeSpan(0, 15, 40, 0, 0)
                        },
                        new
                        {
                            Id = 54,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 15, 50, 0, 0)
                        },
                        new
                        {
                            Id = 55,
                            EndTime = new TimeSpan(0, 16, 10, 0, 0),
                            StartTime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            Id = 56,
                            EndTime = new TimeSpan(0, 16, 20, 0, 0),
                            StartTime = new TimeSpan(0, 16, 10, 0, 0)
                        },
                        new
                        {
                            Id = 57,
                            EndTime = new TimeSpan(0, 16, 30, 0, 0),
                            StartTime = new TimeSpan(0, 16, 20, 0, 0)
                        },
                        new
                        {
                            Id = 58,
                            EndTime = new TimeSpan(0, 16, 40, 0, 0),
                            StartTime = new TimeSpan(0, 16, 30, 0, 0)
                        },
                        new
                        {
                            Id = 59,
                            EndTime = new TimeSpan(0, 16, 50, 0, 0),
                            StartTime = new TimeSpan(0, 16, 40, 0, 0)
                        },
                        new
                        {
                            Id = 60,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 16, 50, 0, 0)
                        },
                        new
                        {
                            Id = 61,
                            EndTime = new TimeSpan(0, 17, 10, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0)
                        },
                        new
                        {
                            Id = 62,
                            EndTime = new TimeSpan(0, 17, 20, 0, 0),
                            StartTime = new TimeSpan(0, 17, 10, 0, 0)
                        },
                        new
                        {
                            Id = 63,
                            EndTime = new TimeSpan(0, 17, 30, 0, 0),
                            StartTime = new TimeSpan(0, 17, 20, 0, 0)
                        },
                        new
                        {
                            Id = 64,
                            EndTime = new TimeSpan(0, 17, 40, 0, 0),
                            StartTime = new TimeSpan(0, 17, 30, 0, 0)
                        },
                        new
                        {
                            Id = 65,
                            EndTime = new TimeSpan(0, 17, 50, 0, 0),
                            StartTime = new TimeSpan(0, 17, 40, 0, 0)
                        },
                        new
                        {
                            Id = 67,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 50, 0, 0)
                        },
                        new
                        {
                            Id = 68,
                            EndTime = new TimeSpan(0, 18, 10, 0, 0),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            Id = 69,
                            EndTime = new TimeSpan(0, 18, 20, 0, 0),
                            StartTime = new TimeSpan(0, 18, 10, 0, 0)
                        },
                        new
                        {
                            Id = 70,
                            EndTime = new TimeSpan(0, 18, 30, 0, 0),
                            StartTime = new TimeSpan(0, 18, 20, 0, 0)
                        },
                        new
                        {
                            Id = 71,
                            EndTime = new TimeSpan(0, 18, 40, 0, 0),
                            StartTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 72,
                            EndTime = new TimeSpan(0, 18, 50, 0, 0),
                            StartTime = new TimeSpan(0, 18, 40, 0, 0)
                        },
                        new
                        {
                            Id = 73,
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 18, 50, 0, 0)
                        },
                        new
                        {
                            Id = 74,
                            EndTime = new TimeSpan(0, 19, 10, 0, 0),
                            StartTime = new TimeSpan(0, 19, 0, 0, 0)
                        },
                        new
                        {
                            Id = 75,
                            EndTime = new TimeSpan(0, 19, 20, 0, 0),
                            StartTime = new TimeSpan(0, 19, 10, 0, 0)
                        },
                        new
                        {
                            Id = 76,
                            EndTime = new TimeSpan(0, 19, 30, 0, 0),
                            StartTime = new TimeSpan(0, 19, 20, 0, 0)
                        },
                        new
                        {
                            Id = 77,
                            EndTime = new TimeSpan(0, 19, 40, 0, 0),
                            StartTime = new TimeSpan(0, 19, 30, 0, 0)
                        },
                        new
                        {
                            Id = 78,
                            EndTime = new TimeSpan(0, 19, 50, 0, 0),
                            StartTime = new TimeSpan(0, 19, 40, 0, 0)
                        },
                        new
                        {
                            Id = 79,
                            EndTime = new TimeSpan(0, 20, 0, 0, 0),
                            StartTime = new TimeSpan(0, 19, 50, 0, 0)
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SalonId")
                        .HasColumnType("int");

                    b.Property<string>("StaffType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.HasIndex("UserId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Đặng Trọng Hà",
                            FullName = "Đặng Trọng Hà",
                            SalonId = 1,
                            StaffType = "manager",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Phạm Quang Tú",
                            FullName = "Phạm Quang Tú",
                            SalonId = 1,
                            StaffType = "stylist",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Phạm Thụy Trinh",
                            FullName = "Phạm Thụy Trinh",
                            SalonId = 1,
                            StaffType = "beautician",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Phạm Nhật Dũng",
                            FullName = "Phạm Nhật Dũng",
                            SalonId = 1,
                            StaffType = "stylist",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Đặng Hà Giang",
                            FullName = "Đặng Hà Giang",
                            SalonId = 1,
                            StaffType = "beautician",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Description = "Beautician 13",
                            FullName = "Beautician 13",
                            SalonId = 1,
                            StaffType = "beautician",
                            UserId = 44
                        },
                        new
                        {
                            Id = 8,
                            Description = "Manager 2",
                            FullName = "Manager 2",
                            SalonId = 2,
                            StaffType = "manager",
                            UserId = 45
                        },
                        new
                        {
                            Id = 9,
                            Description = "Stylist 21",
                            FullName = "Stylist 21",
                            SalonId = 2,
                            StaffType = "stylist",
                            UserId = 46
                        },
                        new
                        {
                            Id = 10,
                            Description = "Stylist 22",
                            FullName = "Stylist 22",
                            SalonId = 2,
                            StaffType = "stylist",
                            UserId = 47
                        },
                        new
                        {
                            Id = 11,
                            Description = "Beutician 21",
                            FullName = "Beutician 21",
                            SalonId = 2,
                            StaffType = "beautician",
                            UserId = 48
                        },
                        new
                        {
                            Id = 12,
                            Description = "Beautician 22",
                            FullName = "Beautician 22",
                            SalonId = 2,
                            StaffType = "beautician",
                            UserId = 49
                        },
                        new
                        {
                            Id = 13,
                            Description = "Manager 3",
                            FullName = "Manager 3",
                            SalonId = 3,
                            StaffType = "manager",
                            UserId = 50
                        },
                        new
                        {
                            Id = 14,
                            Description = "Stylist 31",
                            FullName = "Stylist 31",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 51
                        },
                        new
                        {
                            Id = 15,
                            Description = "Stylist 32",
                            FullName = "Stylist 32",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 52
                        },
                        new
                        {
                            Id = 16,
                            Description = "Beautician 31",
                            FullName = "Beutician 31",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 53
                        },
                        new
                        {
                            Id = 17,
                            Description = "Beautician 32",
                            FullName = "Beautician 32",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 54
                        },
                        new
                        {
                            Id = 18,
                            Description = "Manager 4",
                            FullName = "Manager 4",
                            SalonId = 3,
                            StaffType = "manager",
                            UserId = 55
                        },
                        new
                        {
                            Id = 19,
                            Description = "Stylist 41",
                            FullName = "Stylist 41",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 56
                        },
                        new
                        {
                            Id = 20,
                            Description = "Stylist 42",
                            FullName = "Stylist 42",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 57
                        },
                        new
                        {
                            Id = 21,
                            Description = "Beautician 41",
                            FullName = "Beutician 41",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 58
                        },
                        new
                        {
                            Id = 22,
                            Description = "Beautician 42",
                            FullName = "Beautician 42",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 59
                        },
                        new
                        {
                            Id = 23,
                            Description = "Manager quan 5",
                            FullName = "Manager 5",
                            SalonId = 3,
                            StaffType = "manager",
                            UserId = 60
                        },
                        new
                        {
                            Id = 24,
                            Description = "Stylist 51",
                            FullName = "Stylist 51",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 61
                        },
                        new
                        {
                            Id = 25,
                            Description = "Stylist 52",
                            FullName = "Stylist 52",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 62
                        },
                        new
                        {
                            Id = 26,
                            Description = "Beautician 51",
                            FullName = "Beutician 51",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 63
                        },
                        new
                        {
                            Id = 27,
                            Description = "Beautician 52",
                            FullName = "Beautician 52",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 64
                        },
                        new
                        {
                            Id = 28,
                            Description = "Manager quan 6",
                            FullName = "Manager 6",
                            SalonId = 3,
                            StaffType = "manager",
                            UserId = 65
                        },
                        new
                        {
                            Id = 29,
                            Description = "Stylist 61",
                            FullName = "Stylist 61",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 66
                        },
                        new
                        {
                            Id = 30,
                            Description = "Stylist 62",
                            FullName = "Stylist 62",
                            SalonId = 3,
                            StaffType = "stylist",
                            UserId = 67
                        },
                        new
                        {
                            Id = 31,
                            Description = "Beautician 61",
                            FullName = "Beutician 61",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 68
                        },
                        new
                        {
                            Id = 32,
                            Description = "Beautician 62",
                            FullName = "Beautician 62",
                            SalonId = 3,
                            StaffType = "beautician",
                            UserId = 69
                        });
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.WorkSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppointmentDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SlotOfDayId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentDetailId");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("SlotOfDayId");

                    b.HasIndex("StaffId");

                    b.ToTable("WorkSlots");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Appointment", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Staff", "ChosenStaff")
                        .WithMany("Appointments")
                        .HasForeignKey("ChosenStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Combo", "Combo")
                        .WithMany("Appointments")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.PromotionalCode", "PromotionalCode")
                        .WithMany("Appointments")
                        .HasForeignKey("PromotionalCodeId");

                    b.HasOne("HairCutAppAPI.Entities.Salon", "Salon")
                        .WithMany("Appointments")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChosenStaff");

                    b.Navigation("Combo");

                    b.Navigation("Customer");

                    b.Navigation("PromotionalCode");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.AppointmentDetail", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Staff", "Staff")
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("StaffId");

                    b.Navigation("Appointment");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.AppointmentRating", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentRatings")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Article", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.AppUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.ComboDetail", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Combo", "Combo")
                        .WithMany("ComboDetails")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Service", "Service")
                        .WithMany("ComboDetails")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Customer", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.AppUser", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.CustomersCodes", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.PromotionalCode", "Code")
                        .WithMany("CustomersCodes")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Code");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Device", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.AppUser", "User")
                        .WithMany("Devices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Notification", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Appointment", "Appointment")
                        .WithMany("Notifications")
                        .HasForeignKey("AppointmentId");

                    b.HasOne("HairCutAppAPI.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Review", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Customer", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Salon", "Salon")
                        .WithMany("Reviews")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.SalonsCodes", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.PromotionalCode", "Code")
                        .WithMany("SalonsCodes")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Salon", "Salon")
                        .WithMany("SalonsCodes")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Code");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Staff", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.Salon", "Salon")
                        .WithMany("Staffs")
                        .HasForeignKey("SalonId");

                    b.HasOne("HairCutAppAPI.Entities.AppUser", "User")
                        .WithMany("Staffs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Token", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.AppUser", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.WorkSlot", b =>
                {
                    b.HasOne("HairCutAppAPI.Entities.AppointmentDetail", "AppointmentDetail")
                        .WithMany("WorkSlots")
                        .HasForeignKey("AppointmentDetailId");

                    b.HasOne("HairCutAppAPI.Entities.Appointment", "Appointment")
                        .WithMany("WorkSlots")
                        .HasForeignKey("AppointmentId");

                    b.HasOne("HairCutAppAPI.Entities.SlotOfDay", "SlotOfDay")
                        .WithMany("WorkSlots")
                        .HasForeignKey("SlotOfDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairCutAppAPI.Entities.Staff", "Staff")
                        .WithMany("WorkSlots")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("AppointmentDetail");

                    b.Navigation("SlotOfDay");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.AppUser", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Devices");

                    b.Navigation("Staffs");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Appointment", b =>
                {
                    b.Navigation("AppointmentDetails");

                    b.Navigation("AppointmentRatings");

                    b.Navigation("Notifications");

                    b.Navigation("WorkSlots");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.AppointmentDetail", b =>
                {
                    b.Navigation("WorkSlots");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Combo", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ComboDetails");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.PromotionalCode", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("CustomersCodes");

                    b.Navigation("SalonsCodes");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Salon", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Reviews");

                    b.Navigation("SalonsCodes");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Service", b =>
                {
                    b.Navigation("ComboDetails");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.SlotOfDay", b =>
                {
                    b.Navigation("WorkSlots");
                });

            modelBuilder.Entity("HairCutAppAPI.Entities.Staff", b =>
                {
                    b.Navigation("AppointmentDetails");

                    b.Navigation("Appointments");

                    b.Navigation("WorkSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
